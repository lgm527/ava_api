{
  "{\"sourceRoot\":\"/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api\",\"filename\":\"/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api\",\"plugins\":[],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api",
      "filename": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nconst app = express();\napp.listen(3000, () => console.log('Example app listening on port 3000!'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJhcHAiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFQLE1BQW9CLFNBQXBCO0FBRUEsTUFBTUMsR0FBRyxHQUFHRCxPQUFPLEVBQW5CO0FBRUFDLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLElBQVgsRUFBaUIsTUFDZkMsT0FBTyxDQUFDQyxHQUFSLENBQVkscUNBQVosQ0FERiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbGF1cmVsbG1jY2FmZnJleS9EZXZlbG9wbWVudC9DYXJlZXJUcmFuc2l0aW9uL2NvZGUtY2hhbGxlbmdlcy9hdmFfY2hhbGxlbmdlL2F2YV9hcGkvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC5saXN0ZW4oMzAwMCwgKCkgPT5cbiAgY29uc29sZS5sb2coJ0V4YW1wbGUgYXBwIGxpc3RlbmluZyBvbiBwb3J0IDMwMDAhJyksXG4pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "app",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AAEA,MAAMC,GAAG,GAAGD,OAAO,EAAnB;AAEAC,GAAG,CAACC,MAAJ,CAAW,IAAX,EAAiB,MACfC,OAAO,CAACC,GAAR,CAAY,qCAAZ,CADF",
      "sourceRoot": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/",
      "sourcesContent": [
        "import express from 'express';\n\nconst app = express();\n\napp.listen(3000, () =>\n  console.log('Example app listening on port 3000!'),\n);\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1588799348666
  },
  "{\"sourceRoot\":\"/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api\",\"filename\":\"/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api",
      "filename": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])()); // app.get('/', (req, res) => {\n//   return res.send('Received a GET HTTP method');\n// });\n// Ping\n\nvar ping = {\n  \"ok\": true,\n  \"msg\": \"pong\"\n};\napp.get('/ping', function (req, res) {\n  return res.send(ping);\n}); // Info\n// 1. How did you approach the problem? Tell us in 5-10 sentences max.\n// 2. What would you add if you have more time?\n// 3. What would you remove / add in the challenge if you were in the hiring side?\n\nvar info = {\n  \"ok\": true,\n  \"author\": {\n    \"email\": \"laurellmccaffrey@gmail.com\",\n    \"name\": \"Laurell McCaffrey\"\n  },\n  \"frontend\": {\n    \"url\": \"string, the url of your frontend.\"\n  },\n  \"language\": \"node.js\",\n  \"sources\": \"string, the url of a github repository including your backend sources and your frontend sources\",\n  \"answers\": {\n    \"1\": \"string, answer to the question 1\",\n    \"2\": \"string, answer to the question 2\",\n    \"3\": \"string, answer to the question 3\"\n  }\n};\napp.get('/info', function (req, res) {\n  return res.send(info.answers);\n}); // Mutations\n\napp.post('/mutations', function (req, res) {\n  return res.send('mutation sent');\n}); // Conversations\n\nvar conversations = [{\n  \"id\": \"1\",\n  \"lastMutation\": \"Object, The last mutation applyed on this conversation\",\n  \"text\": \"hi\"\n}, {\n  \"id\": \"2\",\n  \"lastMutation\": \"Object, The last mutation applyed on this conversation\",\n  \"text\": \"hello\"\n}];\napp.get('/conversations', function (req, res) {\n  return res.send(Object.values(conversations));\n});\napp[\"delete\"]('/conversations/:conversationId', function (req, res) {\n  return res.send(\"DELETE HTTP method on tasks/\".concat(req.params.conversationId, \" resource\"));\n}); // starting\n\napp.listen(3000, function () {\n  return console.log('Hello Ava team! 👋');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsInBpbmciLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwiaW5mbyIsImFuc3dlcnMiLCJwb3N0IiwiY29udmVyc2F0aW9ucyIsIk9iamVjdCIsInZhbHVlcyIsInBhcmFtcyIsImNvbnZlcnNhdGlvbklkIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSx1QkFBUixFLENBRUE7QUFDQTtBQUNBO0FBRUE7O0FBRUEsSUFBSUMsSUFBSSxHQUFHO0FBQ1QsUUFBTSxJQURHO0FBRVQsU0FBTztBQUZFLENBQVg7QUFLQUYsR0FBRyxDQUFDRyxHQUFKLENBQVEsT0FBUixFQUFpQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM3QixTQUFPQSxHQUFHLENBQUNDLElBQUosQ0FBU0osSUFBVCxDQUFQO0FBQ0QsQ0FGRCxFLENBSUE7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUssSUFBSSxHQUFHO0FBQ1QsUUFBTSxJQURHO0FBRVQsWUFBVTtBQUNSLGFBQVMsNEJBREQ7QUFFUixZQUFRO0FBRkEsR0FGRDtBQU1ULGNBQVk7QUFDVixXQUFPO0FBREcsR0FOSDtBQVNULGNBQVksU0FUSDtBQVVULGFBQVcsaUdBVkY7QUFXVCxhQUFXO0FBQ1QsU0FBSyxrQ0FESTtBQUVULFNBQUssa0NBRkk7QUFHVCxTQUFLO0FBSEk7QUFYRixDQUFYO0FBa0JBUCxHQUFHLENBQUNHLEdBQUosQ0FBUSxPQUFSLEVBQWlCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCLFNBQU9BLEdBQUcsQ0FBQ0MsSUFBSixDQUFTQyxJQUFJLENBQUNDLE9BQWQsQ0FBUDtBQUNELENBRkQsRSxDQUlBOztBQUVBUixHQUFHLENBQUNTLElBQUosQ0FBUyxZQUFULEVBQXVCLFVBQUNMLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ25DLFNBQU9BLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLGVBQVQsQ0FBUDtBQUNELENBRkQsRSxDQUlBOztBQUVBLElBQUlJLGFBQWEsR0FBRyxDQUNsQjtBQUNBLFFBQU0sR0FETjtBQUVBLGtCQUFnQix3REFGaEI7QUFHQSxVQUFRO0FBSFIsQ0FEa0IsRUFNbEI7QUFDQSxRQUFNLEdBRE47QUFFQSxrQkFBZ0Isd0RBRmhCO0FBR0EsVUFBUTtBQUhSLENBTmtCLENBQXBCO0FBYUFWLEdBQUcsQ0FBQ0csR0FBSixDQUFRLGdCQUFSLEVBQTBCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3RDLFNBQU9BLEdBQUcsQ0FBQ0MsSUFBSixDQUFTSyxNQUFNLENBQUNDLE1BQVAsQ0FBY0YsYUFBZCxDQUFULENBQVA7QUFDRCxDQUZEO0FBSUFWLEdBQUcsVUFBSCxDQUFXLGdDQUFYLEVBQTZDLFVBQUNJLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3pELFNBQU9BLEdBQUcsQ0FBQ0MsSUFBSix1Q0FDMEJGLEdBQUcsQ0FBQ1MsTUFBSixDQUFXQyxjQURyQyxlQUFQO0FBR0QsQ0FKRCxFLENBTUE7O0FBRUFkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXLElBQVgsRUFBaUI7QUFBQSxTQUNmQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxvQkFBWixDQURlO0FBQUEsQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhdXJlbGxtY2NhZmZyZXkvRGV2ZWxvcG1lbnQvQ2FyZWVyVHJhbnNpdGlvbi9jb2RlLWNoYWxsZW5nZXMvYXZhX2NoYWxsZW5nZS9hdmFfYXBpL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29ycyBmcm9tICdjb3JzJztcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2UoY29ycygpKTtcblxuLy8gYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuLy8gICByZXR1cm4gcmVzLnNlbmQoJ1JlY2VpdmVkIGEgR0VUIEhUVFAgbWV0aG9kJyk7XG4vLyB9KTtcblxuLy8gUGluZ1xuXG5sZXQgcGluZyA9IHtcbiAgXCJva1wiOiB0cnVlLFxuICBcIm1zZ1wiOiBcInBvbmdcIlxufVxuXG5hcHAuZ2V0KCcvcGluZycsIChyZXEsIHJlcykgPT4ge1xuICByZXR1cm4gcmVzLnNlbmQocGluZyk7XG59KTtcblxuLy8gSW5mb1xuXG4vLyAxLiBIb3cgZGlkIHlvdSBhcHByb2FjaCB0aGUgcHJvYmxlbT8gVGVsbCB1cyBpbiA1LTEwIHNlbnRlbmNlcyBtYXguXG4vLyAyLiBXaGF0IHdvdWxkIHlvdSBhZGQgaWYgeW91IGhhdmUgbW9yZSB0aW1lP1xuLy8gMy4gV2hhdCB3b3VsZCB5b3UgcmVtb3ZlIC8gYWRkIGluIHRoZSBjaGFsbGVuZ2UgaWYgeW91IHdlcmUgaW4gdGhlIGhpcmluZyBzaWRlP1xuXG5sZXQgaW5mbyA9IHtcbiAgXCJva1wiOiB0cnVlLFxuICBcImF1dGhvclwiOiB7XG4gICAgXCJlbWFpbFwiOiBcImxhdXJlbGxtY2NhZmZyZXlAZ21haWwuY29tXCIsXG4gICAgXCJuYW1lXCI6IFwiTGF1cmVsbCBNY0NhZmZyZXlcIlxuICB9LFxuICBcImZyb250ZW5kXCI6IHtcbiAgICBcInVybFwiOiBcInN0cmluZywgdGhlIHVybCBvZiB5b3VyIGZyb250ZW5kLlwiXG4gIH0sXG4gIFwibGFuZ3VhZ2VcIjogXCJub2RlLmpzXCIsXG4gIFwic291cmNlc1wiOiBcInN0cmluZywgdGhlIHVybCBvZiBhIGdpdGh1YiByZXBvc2l0b3J5IGluY2x1ZGluZyB5b3VyIGJhY2tlbmQgc291cmNlcyBhbmQgeW91ciBmcm9udGVuZCBzb3VyY2VzXCIsXG4gIFwiYW5zd2Vyc1wiOiB7XG4gICAgXCIxXCI6IFwic3RyaW5nLCBhbnN3ZXIgdG8gdGhlIHF1ZXN0aW9uIDFcIixcbiAgICBcIjJcIjogXCJzdHJpbmcsIGFuc3dlciB0byB0aGUgcXVlc3Rpb24gMlwiLFxuICAgIFwiM1wiOiBcInN0cmluZywgYW5zd2VyIHRvIHRoZSBxdWVzdGlvbiAzXCJcbiAgfVxufVxuXG5hcHAuZ2V0KCcvaW5mbycsIChyZXEsIHJlcykgPT4ge1xuICByZXR1cm4gcmVzLnNlbmQoaW5mby5hbnN3ZXJzKTtcbn0pO1xuXG4vLyBNdXRhdGlvbnNcblxuYXBwLnBvc3QoJy9tdXRhdGlvbnMnLCAocmVxLCByZXMpID0+IHtcbiAgcmV0dXJuIHJlcy5zZW5kKCdtdXRhdGlvbiBzZW50Jyk7XG59KTtcblxuLy8gQ29udmVyc2F0aW9uc1xuXG5sZXQgY29udmVyc2F0aW9ucyA9IFtcbiAge1xuICBcImlkXCI6IFwiMVwiLFxuICBcImxhc3RNdXRhdGlvblwiOiBcIk9iamVjdCwgVGhlIGxhc3QgbXV0YXRpb24gYXBwbHllZCBvbiB0aGlzIGNvbnZlcnNhdGlvblwiLFxuICBcInRleHRcIjogXCJoaVwiXG4gIH0sXG4gIHtcbiAgXCJpZFwiOiBcIjJcIixcbiAgXCJsYXN0TXV0YXRpb25cIjogXCJPYmplY3QsIFRoZSBsYXN0IG11dGF0aW9uIGFwcGx5ZWQgb24gdGhpcyBjb252ZXJzYXRpb25cIixcbiAgXCJ0ZXh0XCI6IFwiaGVsbG9cIlxuICB9XG5dXG5cbmFwcC5nZXQoJy9jb252ZXJzYXRpb25zJywgKHJlcSwgcmVzKSA9PiB7XG4gIHJldHVybiByZXMuc2VuZChPYmplY3QudmFsdWVzKGNvbnZlcnNhdGlvbnMpKTtcbn0pO1xuXG5hcHAuZGVsZXRlKCcvY29udmVyc2F0aW9ucy86Y29udmVyc2F0aW9uSWQnLCAocmVxLCByZXMpID0+IHtcbiAgcmV0dXJuIHJlcy5zZW5kKFxuICAgIGBERUxFVEUgSFRUUCBtZXRob2Qgb24gdGFza3MvJHtyZXEucGFyYW1zLmNvbnZlcnNhdGlvbklkfSByZXNvdXJjZWAsXG4gICk7XG59KTtcblxuLy8gc3RhcnRpbmdcblxuYXBwLmxpc3RlbigzMDAwLCAoKSA9PlxuICBjb25zb2xlLmxvZygnSGVsbG8gQXZhIHRlYW0hIPCfkYsnKVxuKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "ping",
        "get",
        "req",
        "res",
        "send",
        "info",
        "answers",
        "post",
        "conversations",
        "Object",
        "values",
        "params",
        "conversationId",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR,E,CAEA;AACA;AACA;AAEA;;AAEA,IAAIC,IAAI,GAAG;AACT,QAAM,IADG;AAET,SAAO;AAFE,CAAX;AAKAF,GAAG,CAACG,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,SAAOA,GAAG,CAACC,IAAJ,CAASJ,IAAT,CAAP;AACD,CAFD,E,CAIA;AAEA;AACA;AACA;;AAEA,IAAIK,IAAI,GAAG;AACT,QAAM,IADG;AAET,YAAU;AACR,aAAS,4BADD;AAER,YAAQ;AAFA,GAFD;AAMT,cAAY;AACV,WAAO;AADG,GANH;AAST,cAAY,SATH;AAUT,aAAW,iGAVF;AAWT,aAAW;AACT,SAAK,kCADI;AAET,SAAK,kCAFI;AAGT,SAAK;AAHI;AAXF,CAAX;AAkBAP,GAAG,CAACG,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,SAAOA,GAAG,CAACC,IAAJ,CAASC,IAAI,CAACC,OAAd,CAAP;AACD,CAFD,E,CAIA;;AAEAR,GAAG,CAACS,IAAJ,CAAS,YAAT,EAAuB,UAACL,GAAD,EAAMC,GAAN,EAAc;AACnC,SAAOA,GAAG,CAACC,IAAJ,CAAS,eAAT,CAAP;AACD,CAFD,E,CAIA;;AAEA,IAAII,aAAa,GAAG,CAClB;AACA,QAAM,GADN;AAEA,kBAAgB,wDAFhB;AAGA,UAAQ;AAHR,CADkB,EAMlB;AACA,QAAM,GADN;AAEA,kBAAgB,wDAFhB;AAGA,UAAQ;AAHR,CANkB,CAApB;AAaAV,GAAG,CAACG,GAAJ,CAAQ,gBAAR,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtC,SAAOA,GAAG,CAACC,IAAJ,CAASK,MAAM,CAACC,MAAP,CAAcF,aAAd,CAAT,CAAP;AACD,CAFD;AAIAV,GAAG,UAAH,CAAW,gCAAX,EAA6C,UAACI,GAAD,EAAMC,GAAN,EAAc;AACzD,SAAOA,GAAG,CAACC,IAAJ,uCAC0BF,GAAG,CAACS,MAAJ,CAAWC,cADrC,eAAP;AAGD,CAJD,E,CAMA;;AAEAd,GAAG,CAACe,MAAJ,CAAW,IAAX,EAAiB;AAAA,SACfC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CADe;AAAA,CAAjB",
      "sourceRoot": "/Users/laurellmccaffrey/Development/CareerTransition/code-challenges/ava_challenge/ava_api/src/",
      "sourcesContent": [
        "import cors from 'cors';\nimport express from 'express';\n\nconst app = express();\n\napp.use(cors());\n\n// app.get('/', (req, res) => {\n//   return res.send('Received a GET HTTP method');\n// });\n\n// Ping\n\nlet ping = {\n  \"ok\": true,\n  \"msg\": \"pong\"\n}\n\napp.get('/ping', (req, res) => {\n  return res.send(ping);\n});\n\n// Info\n\n// 1. How did you approach the problem? Tell us in 5-10 sentences max.\n// 2. What would you add if you have more time?\n// 3. What would you remove / add in the challenge if you were in the hiring side?\n\nlet info = {\n  \"ok\": true,\n  \"author\": {\n    \"email\": \"laurellmccaffrey@gmail.com\",\n    \"name\": \"Laurell McCaffrey\"\n  },\n  \"frontend\": {\n    \"url\": \"string, the url of your frontend.\"\n  },\n  \"language\": \"node.js\",\n  \"sources\": \"string, the url of a github repository including your backend sources and your frontend sources\",\n  \"answers\": {\n    \"1\": \"string, answer to the question 1\",\n    \"2\": \"string, answer to the question 2\",\n    \"3\": \"string, answer to the question 3\"\n  }\n}\n\napp.get('/info', (req, res) => {\n  return res.send(info.answers);\n});\n\n// Mutations\n\napp.post('/mutations', (req, res) => {\n  return res.send('mutation sent');\n});\n\n// Conversations\n\nlet conversations = [\n  {\n  \"id\": \"1\",\n  \"lastMutation\": \"Object, The last mutation applyed on this conversation\",\n  \"text\": \"hi\"\n  },\n  {\n  \"id\": \"2\",\n  \"lastMutation\": \"Object, The last mutation applyed on this conversation\",\n  \"text\": \"hello\"\n  }\n]\n\napp.get('/conversations', (req, res) => {\n  return res.send(Object.values(conversations));\n});\n\napp.delete('/conversations/:conversationId', (req, res) => {\n  return res.send(\n    `DELETE HTTP method on tasks/${req.params.conversationId} resource`,\n  );\n});\n\n// starting\n\napp.listen(3000, () =>\n  console.log('Hello Ava team! 👋')\n);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588804320193
  }
}